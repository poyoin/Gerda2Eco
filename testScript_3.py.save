import serial
import sys
import glob
from time import sleep
import sensorBus

sensorID = {}
sensorData = {}
sensorPort = '0'

#Searching for connected ports
def getAvailableSerialPorts():
	potential_ports = glob.glob('/dev/ttyUSB[0-9]')

	available_ports = []

	for port in potential_ports:
		try:
			s = serial.Serial(port)
			s.close()
			available_ports.append(port)
			
		except (OSError, serial.SerialException):
			print OSError

	return available_ports

# Return sensor port
def getSensorPort(testPort):
	sensorPort = '0'
	try:
		for i in range(65,91):
			slaveID = chr(i)
			testPort.sendMessage("12345678", sensorBus.msg_bustype, slaveID)
			sleep(0.05)
			response = testPort.readNextPacket(12)
			print response
			if response[sensorBus.MsgType] == sensorBus.msg_sensorbustype:
				print "Sensor found at %c"%slaveID
				sensorID[response[sensorBus.DevID]] = ''.join(response[3:len(response)-1])
				sensorPort = testPort.getPort()

			# else:
			# 	print "no sensor found at id %c"%slaveID

	except (OSError, serial.SerialException):
		print OSError

	except:
		print "Unexpeced error in getSensorPort"
		sleep(2)


	return sensorPort

# Conversion function for RPM sensor
def rpm_conversion(response):
	s = ""
	s2 = ""
	for i in range(3,6):
		s2 = format(ord(response[i]), '02x')
		s = s2+s

	rpm = int(s,16)
	return rpm

available_ports = getAvailableSerialPorts()
# print available_ports

for ports in available_ports:
	potential_ser = sensorBus.RS485Bus(ports)
	sensorPort = getSensorPort(potential_ser)
	potential_ser.close()

if(sensorID.keys() == None):
	print "no sensor found"
	sys.exit()
print sensorID
sb = sensorBus.RS485Bus(sensorPort)

### READ all sensors data
while(1):
	try:
		for ID in sensorID:
			sb.sendMessage('12345678', sensorBus.msg_data ,ID)
			sleep(0.05)
			response = sb.readNextPacket(12)
			if(ID == 'R'):
				sensorData[sensorID[ID]] = rpm_conversion(response)
			else:
				sensorData[sensorID[ID]] = ''.join(response[3:len(response)-1])
		print sensorData
	except KeyboardInterrupt:
		sys.exit()
	except:
		print "error for port ",ID
